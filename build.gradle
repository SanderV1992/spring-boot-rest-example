buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'io.spring.dependency-management' version '1.0.5.RELEASE'
    id 'net.ltgt.apt' version '0.15'
}

ext {
    springVersion = "5.1.3.RELEASE"
    springBootAdminVersion = '2.1.1'
    junitJupiterVersion = '5.3.2'
    junitPlatformVersion = '1.3.2'
    lombokVersion = '1.18.2'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'net.ltgt.apt-idea'
apply plugin: 'net.ltgt.apt-eclipse'

group = 'com.example.demo'
version = '0.0.1'
sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    // web
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.3.0')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.2.RELEASE')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    compile("org.springframework:spring-test:${springVersion}")

    // mapStruct
    compile 'org.mapstruct:mapstruct-jdk8:1.2.0.Final'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.2.0.Final'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.2.0.Final'

    // swagger
    compile("io.springfox:springfox-swagger2:2.9.2")
    compile("io.springfox:springfox-swagger-ui:2.9.2")

    // db
    runtime('com.h2database:h2')
    runtime('mysql:mysql-connector-java')

    // tests
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testCompile("org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

    // Enable use of the JUnitPlatform Runner within the IDE
    testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}")

    // tools
    runtime("org.springframework.boot:spring-boot-devtools")

    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    }
}

test {
    useJUnitPlatform()
    testLogging.events "failed" // , "passed", "skipped", "standardOut", "standardError"
}
